<?phpnamespace models;use mysql_xdevapi\Exception;require_once '../../config/Connection.php';class auth extends \Connection{ public function registerUser(string $firstName,string $lastName,string $useName,string $password,string $email,string $address,string $phoneNumber,string $contactPerson):void {     $conn = $this->Connect();     $query = "INSERT INTO users(firstName, lastName, username, password, email, address, phoneNumber, contactPerson) VALUES (?,?,?,?,?,?,?,?)";     $stmt = $conn->prepare($query);     $stmt->bind_param('ssssssss',$firstName,$lastName,$useName,$password,$email,$address,$phoneNumber,$contactPerson);     if ($stmt->execute()){         echo json_encode(['success' => true, 'message' => 'Successfully Registered']);     }else{         echo json_encode(['success' => false, 'message' => 'Error'.$stmt->error]);     }     $stmt->close();     $conn->close(); } public function loginUser(string $username , string $password):void {     $conn = $this->Connect();     $query = "SELECT * FROM users WHERE username = ?";     $stmt = $conn->prepare($query);     $stmt->bind_param('s',$username);     $stmt->execute();     $result = $stmt->get_result();     if ($result->num_rows > 0){         $user = $result->fetch_assoc();         if (password_verify($password,$user['password'])){             session_start();             $_SESSION['username'] = $user['username'];             $_SESSION['userId'] = $user['id'];             echo json_encode(['success' => true ,'message' => 'Successfully Logged']);         }else{             echo json_encode(['success' => false, 'message' => 'Username or Password is incorrect']);         }     }else{         echo json_encode(['success' => false, 'message' => 'Account is Not Found']);     } } public function show():array {     $conn = $this->Connect();     $result = $conn->query("SELECT * FROM users");     $data = [];     if ($result->num_rows > 0){         while ($row = $result->fetch_assoc()){             $data[] = $row;         }         return $data;     } return []; } public function adminLogin($username,$password):void {     try {         $conn = $this->Connect();         $query = "SELECT * FROM admin WHERE username = ?";         $stmt = $conn->prepare($query);         if (!$stmt){             echo json_encode(['success' => false, 'message' => 'Failed to prepare statement']);             return;         }         $stmt->bind_param('s',$username);         $stmt->execute();         $result = $stmt->get_result();         if ($result->num_rows > 0){             $adminUser = $result->fetch_assoc();             if (password_verify($password,$adminUser['password'])){                 echo json_encode(['success' => true, 'message' => 'Successfully Logged']);                 session_start();                 $_SESSION['admin'] = $adminUser['username'];             }else{                 echo json_encode(['success' => false, 'message' => 'username or password is incorrect']);             }         }else{             echo json_encode(['success' => false, 'message' => 'account is not found']);         }     }catch (Exception $e){         error_log("Error" .$e->getMessage());     } } // count the users    public function countedUsers():array    {        try {            $conn = $this->Connect();            $result = $conn->query("SELECT COUNT(*) AS countedUser FROM users");            if ($result){                $data = $result->fetch_assoc();                return ['success' => true, 'countedUser' => $data['countedUser']];            }else {                // Handle query failure                return ['success' => false, 'message' => 'Query failed'];            }        }catch (Exception $e){            error_log('Error'. $e->getMessage());            return ['success' => false, 'message' => 'An error occurred'];        }    }}